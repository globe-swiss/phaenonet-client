name: Test

on:
  pull_request:
    branches: [master]
  push:
    branches: [master, test-pr]

env:
  NODE_VERSION: '18'
  CACHE_SEQ: 1
  REVIEWDOG_VERSION: 'v0.14.2'

jobs:
  cache-deps:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Check cache (node modules)
        id: cache
        uses: martijnhols/actions-cache/check@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - name: Install node modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --include=dev
      - name: Save cache (node modules)
        if: steps.cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: ./node_modules
          key: ${{ steps.cache.outputs.primary-key }}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: cache-deps
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore cache (node modules)
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - name: Set API info
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: ${{ secrets.FIREBASE_TEST_API_URL }}
          target: ./src/local/
      - name: Build test version
        run: npx ng build -c local
      - name: Upload Build Artifact
        uses: ./.github/actions/upload-zip-artifact
        with:
          name: dist-pr-build
          path: dist
          retention-days: 1
  channel:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    environment: phaenonet-test
    if: github.ref != 'refs/heads/master' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    permissions:
      contents: read
      id-token: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - name: Download Build Artifact
        uses: ./.github/actions/download-zip-artifact
        with:
          name: dist-pr-build
      - name: Deploy Preview Channel
        uses: ./.github/actions/deploy-hosting-action
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          project_Id: phaenonet-test
  test:
    # workaround fixed by https://github.com/dorny/test-reporter/pull/174
    permissions:
      statuses: write
      checks: write
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: cache-deps
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore cache (node modules)
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - name: Build test version
        run: npx ng test
        env:
          JEST_JUNIT_OUTPUT_DIR: reports
      - name: Test Report
        uses: dorny/test-reporter@v1.6.0
        with:
          name: Unit Tests Results
          path: reports/junit.xml
          reporter: jest-junit
        if: always()
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: reports/lcov.info
          flags: unittests
        if: always() && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
  e2e-tests:
    concurrency: e2e-test
    name: E2E-tests
    runs-on: ubuntu-latest
    needs: build
    environment: phaenonet-test
    permissions:
      contents: read
      id-token: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Download Build Artifact
        uses: ./.github/actions/download-zip-artifact
        with:
          name: dist-pr-build
      - name: Start server
        uses: ./.github/actions/angular-http-server-action
        with:
          path: ./dist/phaenonet
          port: 4200
      - name: Setup CodeceptJS
        working-directory: e2e
        run: npm i
      - name: e2e-test
        working-directory: e2e
        run: npx codeceptjs run --reporter mochawesome --grep "@flaky" --invert
      - name: Upload E2E-Test Artifact
        uses: ./.github/actions/upload-zip-artifact
        with:
          name: e2e-test-report
          path: e2e/output
          retention-days: 1
        if: always()
      - name: Deploy E2E-Test Report
        uses: ./.github/actions/deploy-hosting-action
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          project_Id: phaenonet-test
          entry_point: e2e/
          channel_id: ${{ github.ref == 'refs/heads/master' && 'live' || null }}
        if: always() && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
  checks:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: cache-deps
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore cache (node modules)
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - name: install codeceptjs deps
        run: npm --prefix e2e ci
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: ${{ env.REVIEWDOG_VERSION }}
      - name: check map icon completeness
        run: |
          diff <(ls src/assets/img/map_pins/de-CH) <(ls src/assets/img/map_pins/fr-CH) || exit
          diff <(ls src/assets/img/map_pins/de-CH) <(ls src/assets/img/map_pins/it-CH) || exit
        if: ${{ always() }}
      - name: stylelint
        run: |
          npx --no-install stylelint "**/*.scss" -f json \
            | jq -r '.[] | {source: .source, warnings:.warnings[]} | "\(.source):\(.warnings.line):\(.warnings.column):\(.warnings.severity): \(.warnings.text)"' \
            | reviewdog -name=stylint -efm="%f:%l:%c:%t%*[^:]: %m" -filter-mode=diff_context -diff="git diff master" -f.diff.strip=0 -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
      - name: eslint
        run: |
          npx --no-install eslint -f rdjson . \
            | reviewdog -name=eslint -f=rdjson -f.diff.strip=0 -filter-mode=diff_context -diff="git diff master" -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
      - name: markdown
        run: |
          npx markdownlint -c ./markdownlint.json . 2>&1 \
            | reviewdog -name=markdown -efm="%f:%l:%c %m" -efm="%f:%l %m" -filter-mode=diff_context -diff="git diff master" -f.diff.strip=1 -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
