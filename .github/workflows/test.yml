name: Test

on:
  pull_request:
    branches: [master]
  push:
    branches: [master, test-pr]

env:
  NODE_VERSION: '18'
  CACHE_SEQ: 1

jobs:
  cache-deps:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Check cache (node modules)
        id: cache
        uses: martijnhols/actions-cache/check@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - name: Install node modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --include=dev
      - name: Save cache (node modules)
        if: steps.cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: ./node_modules
          key: ${{ steps.cache.outputs.primary-key }}
  checks:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: cache-deps
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore cache (node modules)
        uses: martijnhols/actions-cache/restore@v3
        with:
          path: ./node_modules
          key: module-${{ env.NODE_VERSION }}-${{ env.CACHE_SEQ }}-${{ hashFiles('package-lock.json') }}
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: v0.14.2
      - run: reviewdog -version
      - name: stylelint
        run: |
          npx --no-install stylelint "**/*.scss" -f json \
            | jq -r '.[] | {source: .source, warnings:.warnings[]} | "\(.source):\(.warnings.line):\(.warnings.column):\(.warnings.severity): \(.warnings.text)"' \
            | reviewdog -name=stylint -efm="%f:%l:%c:%t%*[^:]: %m" -filter-mode=diff_context -diff="git diff master" -f.diff.strip=0 -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
      - name: eslint
        run: |
          npx --no-install eslint -f rdjson . \
            | reviewdog -name=eslint -f=rdjson -f.diff.strip=0 -filter-mode=diff_context -diff="git diff master" -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
      - name: markdown
        run: |
          npx markdownlint -c ./markdownlint.json . \
            | reviewdog -name=markdown -efm="%f:%l:%c %m" -efm="%f:%l %m" -filter-mode=diff_context -diff="git diff master" -f.diff.strip=0 -fail-on-error -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
