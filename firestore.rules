rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function phenoyear() {
      return get(/databases/$(database)/documents/definitions/config_dynamic).data.phenoyear
    }
  
    match /{document=**} {
      allow read, write: if false; // deny all by default
    }
    
    match /public_users/{document=**} {
      allow read; // allow anonymous users to read all public_users
    }

    match /definitions/{document=**} {
      allow read; // allow anonymous users to read all definitions
    }

    match /analytics_result/{analytics_id} {
      allow read; // allow anonymous users to read all analytical data
    }

    match /activities/{analytics_id} {
      allow read: if request.auth.uid != null;                         // allow all logged in users to read all activities
      allow create: if request.auth.uid == request.resource.data.user; // allow to create activities only for your own user_id
    }

    match /individuals/{individual_id} {
      allow read;                                                     // allow anonymous users to read all individuals
      allow create: if request.auth.uid == request.resource.data.user // allow to create individuals only for your own user_id
                    && ( // mandatory fields
                         request.resource.data.year == phenoyear()                    
                      && request.resource.data.source == 'globe'
                      && request.resource.data.altitude > 0
                      && request.resource.data.type == 'individual'
                      && request.resource.data.keys().hasAll(
                          ['user', 'source', 'year', 'type',
                           'individual', 'species',  
                           'altitude', 'description', 'exposition', 'forest', 'geopos', 'habitat', 'less100', 'name', 'shade', 'watering', 'gradient'
                          ])
                    );
      allow update: if request.auth.uid == resource.data.user // if you own them
                    && request.resource.data.year == phenoyear()
                    && ( // disallowed fields
                         request.resource.data.user == resource.data.user
                      && request.resource.data.year == resource.data.year                    
                      && request.resource.data.source == resource.data.source
                      && request.resource.data.type == resource.data.type
                      && request.resource.data.individual == resource.data.individual
                    );
      allow delete: if request.auth.uid == resource.data.user // if you own them
                    && resource.data.year == phenoyear();
    }

    match /observations/{observation_id} {
      allow read; // allow anonymous users to read all individuals
      allow create: if request.auth.uid == request.resource.data.user // allow to create observations only for your owned individuals
                    && ( // mandatory fields
                         request.resource.data.year == phenoyear()
                      && request.resource.data.source == 'globe'
                      && request.resource.data.keys().hasAll(
                          ['individual_id', 'year', 'source',
                            'individual', 'phenophase', 'species', 
                            'date'
                          ])
                    );
      allow update: if request.auth.uid == resource.data.user // allow to update observations only for your owned individuals
                    && request.resource.data.year == phenoyear()
                    && ( // disallowed fields
                         request.resource.data.user == resource.data.user
                      && request.resource.data.year == resource.data.year
                      && request.resource.data.source == resource.data.source
                      && request.resource.data.individual == resource.data.individual
                      && request.resource.data.individual_id == resource.data.individual_id     
                      && request.resource.data.phenophase == resource.data.phenophase
                      && request.resource.data.species == resource.data.species  
                    );
      allow delete: if request.auth.uid == resource.data.user
      							&& resource.data.year == phenoyear();
    }

    match /users/{user_id} {
      allow read: if request.auth.uid == user_id // allow to read your user only
      allow create: if request.auth.uid == user_id // allow to create your user only
                    && !exists(/databases/$(database)/documents/nicknames/$(request.resource.data.nickname))
                    && request.resource.data.nickname.size() > 2;
      allow update: if request.auth.uid == user_id // allow to modify your user only
                    && (request.resource.data.nickname == resource.data.nickname
                        || !exists(/databases/$(database)/documents/nicknames/$(request.resource.data.nickname)))
                    && request.resource.data.nickname.size() > 2;
      // no delete allowed 
    }
  }
}
